import sys
from PIL import Image
import numpy as np

def encrypt_image(image_path, output_path, key):
    # Open the image
    image = Image.open(image_path)
    image_data = np.array(image)
    
    # Apply encryption (e.g., XOR with a key)
    encrypted_data = image_data ^ key
    
    # Save the encrypted image
    encrypted_image = Image.fromarray(encrypted_data)
    encrypted_image.save(output_path)

def decrypt_image(image_path, output_path, key):
    # Open the encrypted image
    image = Image.open(image_path)
    image_data = np.array(image)
    
    # Apply decryption (reverse of encryption)
    decrypted_data = image_data ^ key
    
    # Save the decrypted image
    decrypted_image = Image.fromarray(decrypted_data)
    decrypted_image.save(output_path)

def main():
    if len(sys.argv) != 5:
        print("Usage: python image_encryption.py <encrypt/decrypt> <input_image> <output_image> <key>")
        return

    mode = sys.argv[1]
    input_image_path = sys.argv[2]
    output_image_path = sys.argv[3]
    key = int(sys.argv[4])

    if mode == 'encrypt':
        encrypt_image(input_image_path, output_image_path, key)
        print(f"Image encrypted and saved to {output_image_path}")
    elif mode == 'decrypt':
        decrypt_image(input_image_path, output_image_path, key)
        print(f"Image decrypted and saved to {output_image_path}")
    else:
        print("Invalid mode. Use 'encrypt' or 'decrypt'.")

if __name__ == "__main__":
    main()
